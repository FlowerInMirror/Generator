ERROR 2019-12-08 19:10 freemarker.runtime>>Error executing FreeMarker template (_Log4JLoggerFactory.java:60) 
FreeMarker template error:
The following has evaluated to null or missing:
==> email  [in template "${className}ServiceImpl.ftl" at line 14, column 32]

----
Tip: If the failing expression is known to be legally refer to something that's null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${email}  [in template "${className}ServiceImpl.ftl" at line 14, column 30]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:108)
	at freemarker.core.EvalUtil.coerceModelToString(EvalUtil.java:346)
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:80)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:40)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.MixedContent.accept(MixedContent.java:57)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.Environment.process(Environment.java:235)
	at freemarker.template.Template.process(Template.java:262)
	at com.eoma.autocoding.Generator.gen(Generator.java:164)
	at com.eoma.autocoding.Generator.main(Generator.java:180)
ERROR 2019-12-08 19:11 freemarker.runtime>>Error executing FreeMarker template (_Log4JLoggerFactory.java:60) 
FreeMarker template error:
The following has evaluated to null or missing:
==> email  [in template "${className}ServiceImpl.ftl" at line 14, column 32]

----
Tip: If the failing expression is known to be legally refer to something that's null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${email}  [in template "${className}ServiceImpl.ftl" at line 14, column 30]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:108)
	at freemarker.core.EvalUtil.coerceModelToString(EvalUtil.java:346)
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:80)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:40)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.MixedContent.accept(MixedContent.java:57)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.Environment.process(Environment.java:235)
	at freemarker.template.Template.process(Template.java:262)
	at com.eoma.autocoding.Generator.gen(Generator.java:164)
	at com.eoma.autocoding.Generator.main(Generator.java:180)
ERROR 2019-12-08 23:05 freemarker.runtime>>Error executing FreeMarker template (_Log4JLoggerFactory.java:60) 
FreeMarker template error:
The following has evaluated to null or missing:
==> id  [in template "${className}Mapper.xml" at line 41, column 30]

----
Tip: If the failing expression is known to be legally refer to something that's null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #{id}  [in template "${className}Mapper.xml" at line 41, column 28]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:108)
	at freemarker.core.UnexpectedTypeException.newDesciptionBuilder(UnexpectedTypeException.java:60)
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:40)
	at freemarker.core.NonNumericalException.<init>(NonNumericalException.java:44)
	at freemarker.core.Expression.modelToNumber(Expression.java:103)
	at freemarker.core.Expression.evalToNumber(Expression.java:96)
	at freemarker.core.NumericalOutput.accept(NumericalOutput.java:55)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.MixedContent.accept(MixedContent.java:57)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.Environment.process(Environment.java:235)
	at freemarker.template.Template.process(Template.java:262)
	at com.eoma.autocoding.Generator.gen(Generator.java:172)
	at com.eoma.autocoding.Generator.main(Generator.java:194)
ERROR 2019-12-08 23:05 freemarker.runtime>>Error executing FreeMarker template (_Log4JLoggerFactory.java:60) 
FreeMarker template error:
The following has evaluated to null or missing:
==> id  [in template "${className}Mapper.xml" at line 41, column 31]

----
Tip: If the failing expression is known to be legally refer to something that's null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #{id}  [in template "${className}Mapper.xml" at line 41, column 29]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:108)
	at freemarker.core.UnexpectedTypeException.newDesciptionBuilder(UnexpectedTypeException.java:60)
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:40)
	at freemarker.core.NonNumericalException.<init>(NonNumericalException.java:44)
	at freemarker.core.Expression.modelToNumber(Expression.java:103)
	at freemarker.core.Expression.evalToNumber(Expression.java:96)
	at freemarker.core.NumericalOutput.accept(NumericalOutput.java:55)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.MixedContent.accept(MixedContent.java:57)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.Environment.process(Environment.java:235)
	at freemarker.template.Template.process(Template.java:262)
	at com.eoma.autocoding.Generator.gen(Generator.java:172)
	at com.eoma.autocoding.Generator.main(Generator.java:194)
ERROR 2019-12-08 23:06 freemarker.runtime>>Error executing FreeMarker template (_Log4JLoggerFactory.java:60) 
FreeMarker template error:
The following has evaluated to null or missing:
==> id  [in template "${className}Mapper.xml" at line 41, column 31]

----
Tip: If the failing expression is known to be legally refer to something that's null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #{id}  [in template "${className}Mapper.xml" at line 41, column 29]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:108)
	at freemarker.core.UnexpectedTypeException.newDesciptionBuilder(UnexpectedTypeException.java:60)
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:40)
	at freemarker.core.NonNumericalException.<init>(NonNumericalException.java:44)
	at freemarker.core.Expression.modelToNumber(Expression.java:103)
	at freemarker.core.Expression.evalToNumber(Expression.java:96)
	at freemarker.core.NumericalOutput.accept(NumericalOutput.java:55)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.MixedContent.accept(MixedContent.java:57)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.Environment.process(Environment.java:235)
	at freemarker.template.Template.process(Template.java:262)
	at com.eoma.autocoding.Generator.gen(Generator.java:172)
	at com.eoma.autocoding.Generator.main(Generator.java:194)
ERROR 2019-12-08 23:06 freemarker.runtime>>Error executing FreeMarker template (_Log4JLoggerFactory.java:60) 
FreeMarker template error:
The following has evaluated to null or missing:
==> id  [in template "${className}Mapper.xml" at line 41, column 31]

----
Tip: If the failing expression is known to be legally refer to something that's null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #{id}  [in template "${className}Mapper.xml" at line 41, column 29]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:108)
	at freemarker.core.UnexpectedTypeException.newDesciptionBuilder(UnexpectedTypeException.java:60)
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:40)
	at freemarker.core.NonNumericalException.<init>(NonNumericalException.java:44)
	at freemarker.core.Expression.modelToNumber(Expression.java:103)
	at freemarker.core.Expression.evalToNumber(Expression.java:96)
	at freemarker.core.NumericalOutput.accept(NumericalOutput.java:55)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.MixedContent.accept(MixedContent.java:57)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.Environment.process(Environment.java:235)
	at freemarker.template.Template.process(Template.java:262)
	at com.eoma.autocoding.Generator.gen(Generator.java:172)
	at com.eoma.autocoding.Generator.main(Generator.java:194)
ERROR 2019-12-08 23:10 freemarker.runtime>>Error executing FreeMarker template (_Log4JLoggerFactory.java:60) 
FreeMarker template error:
The following has evaluated to null or missing:
==> id  [in template "${className}Mapper.xml" at line 41, column 31]

----
Tip: If the failing expression is known to be legally refer to something that's null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #{id}  [in template "${className}Mapper.xml" at line 41, column 29]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:108)
	at freemarker.core.UnexpectedTypeException.newDesciptionBuilder(UnexpectedTypeException.java:60)
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:40)
	at freemarker.core.NonNumericalException.<init>(NonNumericalException.java:44)
	at freemarker.core.Expression.modelToNumber(Expression.java:103)
	at freemarker.core.Expression.evalToNumber(Expression.java:96)
	at freemarker.core.NumericalOutput.accept(NumericalOutput.java:55)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.MixedContent.accept(MixedContent.java:57)
	at freemarker.core.Environment.visit(Environment.java:257)
	at freemarker.core.Environment.process(Environment.java:235)
	at freemarker.template.Template.process(Template.java:262)
	at com.eoma.autocoding.Generator.gen(Generator.java:172)
	at com.eoma.autocoding.Generator.main(Generator.java:194)
